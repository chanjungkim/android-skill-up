apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

def readVersion() {
    def versionFile = new File(project.rootDir, 'version.properties')
    def version = new Properties()
    def stream
    try {
        stream = new FileInputStream(versionFile)
        version.load(stream)
    } catch (FileNotFoundException ignore) {
    } finally {
        if (stream != null) stream.close()
    }
    if (!version['major']) version['major'] = "1"
    if (!version['minor']) version['minor'] = "0"
    if (!version['patch']) version['patch'] = "0"
    if (!version['code']) version['code'] = "1"
    return version
}

def readVersionName() {
    def version = readVersion()
    return "${version['major']}.${version['minor']}.${version['patch']}"
}

def readVersionCode() {
    def version = readVersion()
    def code = version['code'] as int
    return code
}

// region 버전 자동 증가
def incrementVersionNumber(def type = "build") {
    def versionFile = new File(project.rootDir, 'version.properties')

    def version = readVersion()

    def major = version['major'] as int
    def minor = version['minor'] as int
    def patch = version['patch'] as int
    def build = version['build'] as int

    if (type == 'major') {
        major++
        minor = 0
        patch = 0
    } else if (type == 'minor') {
        minor++
        patch = 0
    }else if (type == 'patch') {
        patch++
    }

    build++

    version['major'] = major.toString()
    version['minor'] = minor.toString()
    version['patch'] = patch.toString()
    version['build'] = build.toString()

    def stream = new FileOutputStream(versionFile)
    try {
        version.store(stream, null)
    } finally {
        stream.close()
    }

    return major + "." + minor
}

task doMajorVersionIncrement {
    doLast {
        println "Incrementing major version..."
        incrementVersionNumber('major')
    }
}

task doMinorVersionIncrement {
    doLast {
        println "Incrementing minor version..."
        incrementVersionNumber('minor')
    }
}

task doPatchVersionIncrement {
    doLast {
        println "Incrementing patch version..."
        incrementVersionNumber('patch')
    }
}

task doBuildNumberIncrement {
    doLast {
        println "Incrementing build number..."
        incrementVersionNumber('build')
    }
}
// endregion

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "dev.chu.memo"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode readVersionCode()
        versionName readVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        releaseWithSignedKey {
            keyAlias SIGNED_KEY_ALIAS
            keyPassword SIGNED_KEY_PASSWORD
            storeFile file(SIGNED_STORE_FILE)
            storePassword SIGNED_STORE_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.releaseWithSignedKey
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // For Kotlin use paging-runtime-ktx

    implementation 'androidx.core:core-ktx:1.3.2'
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    implementation 'androidx.activity:activity-ktx:1.2.0-beta02'
    implementation 'androidx.fragment:fragment-ktx:1.3.0-beta02'

    implementation 'androidx.recyclerview:recyclerview-selection:1.0.0'
//    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha05'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
//    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.mockito:mockito-inline:2.27.0'

    // glide : https://github.com/bumptech/glide
    def glideVersion = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Koin for Kotlin
    def koin_version = '2.1.3'
    implementation "org.koin:koin-core:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    // google map
    def googleMapVersion = "17.0.0"
    implementation "com.google.android.gms:play-services-maps:$googleMapVersion"
    implementation "com.google.android.gms:play-services-location:$googleMapVersion"

    implementation 'gun0912.ted:tedpermission:2.1.0'

    // rx
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'

    implementation 'com.jakewharton.rxbinding3:rxbinding:3.1.0'

    // coroutines
    def coroutines_version = "1.3.7"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // lottie
    def lottie_version = "3.3.1"
    implementation "com.airbnb.android:lottie:$lottie_version"

    // region architecture components
    // lifecycle : https://developer.android.com/jetpack/androidx/releases/lifecycle
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // retrofit
    def retrofit_version = '2.8.1'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'

    // room : https://developer.android.com/jetpack/androidx/releases/room
    def roomVersion = "2.2.5"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

//    def paging_version = '2.1.1'
//    implementation "androidx.paging:paging-runtime:$paging_version"
    // endregion

    implementation "androidx.security:security-crypto:1.1.0-alpha03"
    implementation 'com.mikhaellopez:circularprogressbar:2.0.0'

    // module
    implementation project(':module_network')
    implementation project(':check_language')
}

// In order to have parcelize annotation
//androidExtensions {
//    experimental = true
//}